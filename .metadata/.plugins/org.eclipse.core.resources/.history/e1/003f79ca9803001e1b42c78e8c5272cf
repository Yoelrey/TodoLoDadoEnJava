package ExamenTercera;

import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class VentanaEuro extends JFrame implements ActionListener {

	// Un contenedor de elementos gráficos
	private Container contenedor;
	/*
	 * Etiquetas estáticas para identificar los campos de texto a ingresar y
	 * calcular
	 */
	private JLabel valor;
	// Campos de texto a ingresar
	private JTextField campoBase, campoAltura, campoApotema;
	// Botón para realizar los cálculos numéricos
	private JButton calcular;

	/**
	 * Constructor de la clase VentanaPirámide
	 */
	public VentanaEuro() {
		inicio();
		setTitle("Piramide"); // Establece el título de la ventana
		setSize(280, 240); // Establece el tamaño de la ventana
		setLocationRelativeTo(null); /* La ventana se posiciona en el centro de la pantalla */
		setResizable(false); /* Establece que el botón de cerrar permitirá salir de la aplicación */
	}

	/**
	 * Método que crea la ventana con sus diferentes componentes gráficos
	 */
	private void inicio() {

		contenedor = getContentPane(); /* Obtiene el panel de contenidos de la ventana */
		contenedor.setLayout(null); /* Establece que el contenedor no tiene un layout */

		

		

		


		/* Establece el botón para calcular volumen y superficie de la pirámide */
		calcular = new JButton();
		calcular.setText("Calcular");
		calcular.setBounds(120, 110, 135, 23); /* Establece la posición del botón calcular */
		/* Agrega al botón un ActionListener para que gestione eventos del botón */
		calcular.addActionListener(this);

	
		// Se añade cada componente gráfico al contenedor de la ventana
		contenedor.add(valor);
		contenedor.add(campoBase);
	
		contenedor.add(campoAltura);
		
		contenedor.add(campoApotema);
		contenedor.add(calcular);
		
	}

	/**
	 * Método que gestiona los eventos generados en la ventana de la esfera throws
	 * Exception Excepción al ingresar un campo nulo o error en formato de número
	 */
	public void actionPerformed(ActionEvent event) {
		Euro euro;
		boolean error = false;
		double valor = 0;
		
		try {
			// Se obtiene y convierte el valor numérico de la base
			
			Euro  e= new Euro(valor);
			// Se muestra el volumen
			} catch (Exception e) {
			error = true; 
			} finally {
			if (error) { /*
							 * Si ocurre una excepción, se muestra un mensaje de error
							 */
				JOptionPane.showMessageDialog(null, "Campo nulo o error en formato de número", "Error",
						JOptionPane.ERROR_MESSAGE);
			}
		}
	}

}